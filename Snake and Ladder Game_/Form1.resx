<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>